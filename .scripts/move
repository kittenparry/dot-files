#!/bin/bash

# move files in ~/Downloads into separate directories based on file extensions
# direct port of batch version below
# https://github.com/kittenparry/small-scripts/blob/master/bat/move.bat

dwn=~/Downloads
folders=(f.torrent f.img f.webm f.exe f.comp f.vid f.oth)

# extension arrays
ex_tor=(torrent)
ex_img=(jpg png gif jpeg bmp webp
	JPG PNG)
ex_web=(webm)
ex_exe=(exe msi) # probably unnecessary
ex_com=(rar zip 7z dmg tar.xz)
ex_vid=(mp4 avi flv ts mov wmv mkv 3gp m4v mpg
	MOV MP4)
ex_oth=(
	pdf mp3 txt iso docx rtf svg js pptx doc
	m4a html css ogg xlsx gz azw3 mobi log jar
	scs swf ods db xml ini sh php ogx save
	htmlz h class rpa rpy sav package ttf bk2 csv
	renpy srt apk sdltm dll py pak vsix icns circ
	pls bat c pyw md ila cfg xcf AppImage
)
exs=(ex_tor ex_img ex_web ex_exe ex_com ex_vid ex_oth)

# create subfolders if they don't exist
for f in "${folders[@]}"
do
	if [ ! -d $dwn/$f ]; then
		mkdir $dwn/$f
		echo -e "$dwn/$f\tcreated"
	# else
	# 	echo -e "$dwn/$f\talready exists"
	fi
done

cd $dwn

# -v verbose, makes it so you can see the file is moved (#11)
# -n if the filename already exists, won't move

# check and move
# chmov ex_tor "$file" 0
chmov () {
	# array name into a local var instead of passing an array (which spreads args by default)
	local -n arr=$1
	for ex in "${arr[@]}"
	do
		if [[ $2 == *.$ex ]]; then
			mv -vn "$2" ${folders[$3]}
		fi
	done
}

# loop through everything in folder
# check if it's a file
# loop through extensions for each different iteration
# using chmov above
# loop through extensions of each category
# and move files accordingly if they match any
for file in *
do
	if [ -f "$file" ]; then
		# ! addition changes i to 0..6 from ex_tor..ex_oth
		for i in "${!exs[@]}"
		do
			chmov ${exs[i]} "$file" $i
		done
	fi
done
